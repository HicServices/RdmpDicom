name: .NET Core

on:
  pull_request

env:
  MSSQL_SA_PASSWORD: "YourStrong!Passw0rd"
  ACCEPT_EULA: "Y"
  MSSQL_PID: "developer"
  
jobs:
  package:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
      - name: Get version
        id: version
        run: |
          for /f tokens^=1^,2^ delims^=^" %i in (SharedAssemblyInfo.cs) do @if "%i"=="[assembly: AssemblyVersion(" echo ::set-output name=version::%j
      - name: Report version
        run: echo ${{ steps.version.outputs.version }}
      - name: Build
        run: |
          cd Plugin/net461
          dotnet publish --runtime win-x64 -c Release --self-contained false
          cd ../netcoreapp2.2
          dotnet publish --runtime win-x64 -c Release --self-contained false
          dotnet publish --runtime linux-x64 -c Release --self-contained false
          cd ../..
          echo nuget pack ./Rdmp.Dicom.nuspec -Properties Configuration=Release -IncludeReferencedProjects -Symbols -Version ${{ steps.version.outputs.version }}
          echo nuget pack ./Rdmp.Dicom.Library.nuspec -Properties Configuration=Release -IncludeReferencedProjects -Symbols -Version ${{ steps.version.outputs.version }}
          echo nuget push HIC.Rdmp.Dicom.${{ steps.version.outputs.version }}.nupkg -Source https://api.nuget.org/v3/index.json -ApiKey ${{ secrets.NUGET_KEY }}
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: Add MSFT code signing key
      run: wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
    - name: Add MSFT package repo
      run: sudo add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/18.04/mssql-server-2019.list)"
    - name: MySQL
      run: |
        sudo mkdir -p /var/run/mysqld
        sudo chown mysql:mysql /var/run/mysqld
        sudo mysqld_safe --port=3306 --skip-grant-tables &
    - name: Install Sql Server
      run: sudo apt-get install -y --no-install-recommends postgresql mssql-tools mssql-server
    - name: Configure Sql Server
      run: sudo -E /opt/mssql/bin/mssql-conf -n setup accept-eula
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity normal
